<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CustomControls">

    <!-- Converter, der null → Collapsed umwandelt -->
    <local:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />

    <!-- Style für RoundedButton -->
    <Style TargetType="{x:Type local:RoundedButton}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#007ACC" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IconWidth" Value="16" />
        <Setter Property="IconMargin" Value="5,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:RoundedButton}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="DarkBlue"
                            BorderThickness="1">
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <!-- Icon wird nur angezeigt, wenn gesetzt -->
                            <Image Source="{TemplateBinding Icon}"
                                   Width="{TemplateBinding IconWidth}"
                                   Margin="{TemplateBinding IconMargin}"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}}" />

                            <!-- Button-Inhalt (Text, etc.) -->
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#005A9E" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#003F6B" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PushButton}">
        <Setter Property="Background" Value="#007ACC" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IconWidth" Value="16" />
        <Setter Property="IconMargin" Value="5,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PushButton}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="DarkBlue"
                            BorderThickness="1">
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <Image x:Name="IconImage"
                                   Width="{TemplateBinding IconWidth}"
                                   Margin="{TemplateBinding IconMargin}"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding InactiveIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}}"/>
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center" />
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Wechsel zwischen Icon-Bildern -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="IconImage" Property="Source" Value="{Binding ActiveIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="IconImage" Property="Source" Value="{Binding InactiveIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>

                        <!-- Farben ändern bei Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#005A9E" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#003F6B" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

<!-- This XAML defines a custom button style with rounded corners, hover, and pressed effects. -->